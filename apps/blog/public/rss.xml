<?xml version="1.0" ?>
  <rss
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:content="http://purl.org/rss/1.0/modules/content/"
    xmlns:atom="http://www.w3.org/2005/Atom"
    version="2.0"
  >
    <channel>
        <title><![CDATA[seulheeLog']]></title>
        <link>https://www.seulheehan.com/</link>
        <description>
          <![CDATA[I like to share my knowledge.]]>
        </description>
        <language>en</language>
        <lastBuildDate>2022-04-23</lastBuildDate>
        <item>
    <title><![CDATA[[온수냠냐미] onsuyumyumi]]></title>
    <link>https://www.seulheehan.com//onsuyumyumi</link>
    <pubDate>2022-04-23</pubDate>
    <guid isPermaLink="false">https://www.seulheehan.com//onsuyumyumi</guid>
    <description>
    <![CDATA[온수역 맛집 소개 서비스 개발기를 공유합니다.]]>
    </description>
    <content:encoded>
      <![CDATA[<p><img src="https://user-images.githubusercontent.com/63100352/175526110-2e0d1d70-8c3f-4e07-b262-440a00422e7d.png" alt="image"></p>
<p>2022.02.18 ~ 2022.03.15 약 3주동안 <b>온수역 맛집 소개 서비스</b>를 개발하였다.</p>
<h2 id="개발-동기" class="heading">개발 동기</h2>
<p>서비스명은 <b>“온수냠냐미 (onsuyumyumi)”</b>로 이번 학기 대면이라 처음 학교에 오시거나 생소하신 분들이 많을 거라 생각해 도움이 되고자 서비스를 기획하였다.</p>
<p>최대한 학기 초에 배포하여 알리는 것이 효과적일 거라 생각해 3주로 개발 기간을 잡았다.</p>
<p>"오늘 뭐 먹지?", "맛집이 어딜까?"라는 고민은 항상 하게 된다. (<del>사실 나만 그럴지도 모른다</del>)
그 고민을 온수냠냐미에서 해결할 수 있는 게 목표였다.</p>
<h2 id="개발" class="heading">개발</h2>
<p>온수냠냐미는 React, TypeScript, Emotion을 이용해 개발하였으며 Lottie를 사용하였다.</p>
<p>개발 전 Figma를 이용해 페이지 구성 및 디자인을 하였고 Notion을 이용해 개발에 관한 기획 및 회고를 진행하였다.</p>
<p>1주를 한 Sprint로 계획하여 sprint가 종료될 때 회고하는 시간을 가졌다. <a href="https://jbee.io/essay/about_retrospective/" target="_blank" rel="noopener noreferer">KPT 방법론</a>으로 회고를 진행하였으며 이를 통해 개발하는 데에 있어 개선해 나갈 수 있었다.</p>
<p>이후 사용자 경험 최적화를 위해 Google Analytics와 Hotjar를 부착하였으며 Vercel을 이용해 배포하였다.</p>
<h2 id="배포" class="heading">배포</h2>
<p><a href="https://onsu-yum-yumi.vercel.app/" target="_blank" rel="noopener noreferer">www.onsu-yum-yumi.vercel</a> 현재 해당 URL에서 서비스되고 있다.</p>
<h2 id="마무리" class="heading">마무리</h2>
<p>뒤로가기 버튼, 슬라이드 등 다양한 기능을 넣지 못했던 아쉬움이 있지만 개발을 하면서 많이 배웠으며 사용자들에게 알리고 좋은 반응을 받아 뿌듯했고 온수냠냐미는 내가 더 열심히 개발하는 원동력이 되었다.</p>
<p><img src="https://velog.velcdn.com/images/seulhyi/post/72b11e19-3c09-4538-b86b-a7c3eb31e61a/image.png" alt=""></p>
<p>학교의 에브리타임과 IT 단톡방 등에 홍보를 하였고 생각보다 많은 반응을 얻을 수 있었다 😭 ..</p>
<p><img src="https://velog.velcdn.com/images/seulhyi/post/7bf29fd6-682d-44fd-bc19-b1f928678e57/image.png" alt=""></p>
<p>Hotjar를 통해 사용자들의 피드백을 얻을 수 있었고 Recordings을 보며 Media Query 적용이 안된 사이즈를 보고 다시 수정할 수 있었다.</p>
<p><img src="https://velog.velcdn.com/images/seulhyi/post/35328f33-caa4-4db9-a600-ede020a0ddaf/%EC%98%A8%EC%88%98%EB%83%A0%EB%83%90%EB%AF%B8%20%ED%86%B5%EA%B3%842.png" alt=""></p>
<p>이틀 동안 908명의 사용자가 들어왔으며 지금도 꾸준히 사용자들이 유입되고 있다.</p>
<p>이 전까지 프론트엔드 개발자를 꿈꾸는 것에 있어 많은 고민과 어려움이 있었지만 내가 만든 서비스가 많은 관심을 받고 사람들에게 도움이 된 것 같아 내 꿈에 대해 더 열심히 달려나가야겠다고 느끼게 되었다.</p>
<p>아직은 부족하지만 언젠가 더 많은 사람들에게 도움이 될 수 있는 서비스를 만드는 개발자가 되도록 노력할 것이다.</p>
<p>👍👍👍👍</p>]]>
    </content:encoded>
  </item><item>
    <title><![CDATA[vscode-styled-components 설치 후 auto complete 안되는 문제]]></title>
    <link>https://www.seulheehan.com//autoComplete</link>
    <pubDate>2022-02-06</pubDate>
    <guid isPermaLink="false">https://www.seulheehan.com//autoComplete</guid>
    <description>
    <![CDATA[]]>
    </description>
    <content:encoded>
      <![CDATA[<p><img src="https://user-images.githubusercontent.com/63100352/175525024-4987c0d9-355d-4580-8b08-350ebda73cca.png" alt="vscode-styled-components_auto_complete_적용안됨"></p>
<p>styled-component 사용 중 css 코드 작성 시 자동완성이 되지 않아 자동완성 기능을 해주는 <b>vscode-styled-components</b>를 설치하고자 하였다.</p>
<p><img src="https://images.velog.io/images/seulhyi/post/ca11870e-8e17-49b5-a419-987787838f1a/image.png" alt=""></p>
<p>설치 후 css코드를 작성해 보았는데 자동완성 기능이 작동하지 않았다.
분명 이것만 설치하면 되는 건데 ..</p>
<p>다시 설치도 해보고 vscode도 지웠다가 설치해보았지만 여전히 문제는 해결되지 않았다.</p>
<p>나와 비슷한 문제를 겪고 있을 사람들을 위해 글을 쓰게 되었다.</p>
<h2 id="해결" class="heading">해결</h2>
<p>현재(2022.02.06) vscode의 최신 버전은 1.64.0이다. 내 vscode 버전 또한 1.64.0이었는데 <a href="https://github.com/styled-components/vscode-styled-components/issues/354" target="_blank" rel="noopener noreferer">IntelliSense not working after updating vscode to 1.64</a>를 보면 나와 같은 버전인 분도 자동완성 기능이 작동하지 않는다는 걸 볼 수 있었다.</p>
<p>vscode 버전을 <b>1.63.2</b>로 다시 설치하니 vscode-styled-components가 작동하였다.</p>
<p><a href="https://code.visualstudio.com/updates/v1_63" target="_blank" rel="noopener noreferer">download in this link</a></p>]]>
    </content:encoded>
  </item><item>
    <title><![CDATA[[BOOKREST] 마치며]]></title>
    <link>https://www.seulheehan.com//bookrestTheend</link>
    <pubDate>2021-08-12</pubDate>
    <guid isPermaLink="false">https://www.seulheehan.com//bookrestTheend</guid>
    <description>
    <![CDATA[프로젝트를 마치고 배운 점을 작성하며 회고를 마칩니다.]]>
    </description>
    <content:encoded>
      <![CDATA[<p>8월 13일 해커톤 제출 완료, BOOKREST의 개발이 끝이 났다. 👏🏻👏🏻👏🏻</p>
<p>작년에 멋쟁이 사자처럼 8기 아기사자로 들어와 이번에 9기 운영진으로서 팀 프로젝트를 진행하였다.
BOOKREST를 통해 정말 많이 배웠고 나에게 뜻깊은 시간이었다.</p>
<p>나름 방학 동안 많이 공부했다고 생각했는데 실전은 달랐다.
이번 BOOKREST 개발을 하면서 내가 배운 점을 정리해 놓으려 한다.</p>
<h2 id="배운-점" class="heading">배운 점</h2>
<h3 id="회의">회의</h3>
<p>BOOKREST 회의를 하면 한 명이 서기로 적고 트렐로에 정리하는 식이었는데 시간이 지나고부터 더 많은 회의 주제들이 나오고 공유할 정보들을 트렐로에 적는 게 여러 면에서 불편했다.</p>
<p>그래서 우리는 NOTION에서 회의 내용을 정리했다. NOTION은 캘린더, 보드뷰와 같이 편리한 기능들이 많이 내장되어 있고 무엇보다 개발이나 회의에 관한 내용을 보기 쉽게 정리할 수 있다.</p>
<p><img src="https://images.velog.io/images/seulhyi/post/08c02749-f231-41db-b06d-49deead5acba/image.png" alt=""></p>
<p>팀원이 할 일이나 개발사항을 적어놓으면 들어가서 피드백을 적어놓고 얘기할 수 있어 좋았던 것 같다.
<img src="https://images.velog.io/images/seulhyi/post/1c59a502-73ec-49c8-9418-70d8d035571b/image.png" alt=""></p>
<h3 id="협업">협업</h3>
<p>협업에서 가장 중요한 부분은 <strong>소통</strong>이라고 생각한다.
Frontend와 Backend으로 나누어도 서로서로 소통이 제일 중요한 것 같다.</p>
<p>Backend에서 기능을 만들어도 Frontend에서 보여주는 페이지를 만들지 않고 나중에 얘기하게 된다면 수정할 것들이 더 많아지게 된다. BOOKREST 개발하기 전에 많이 회의하고 디자인, db 등 다 정했다고 생각했는데 막상 개발을 시작하니 변경되는 사항이 많았다.
BOOKREST를 개발하면서 사소한 것도 얘기하고 기록하는 게 중요하다고 느꼈다.</p>
<h3 id="frontend">Frontend</h3>
<p>나는 Frontend를 맡았다. CSS BEM방식을 지키려고 했고 필요한 코드만 쓰려고 노력했다.</p>
<p>개발하면서 가장 힘들었던 부분은 디자인이었다. scroll 감지 등 javascript도 처음 해보는 것들도 많았지만 디자인을 생각하고 또 생각했던 것 같다. Figma로 팀원들과 디자인 구성을 했지만 직접 웹에 디자인해보니 생각과 다른 점들이 많았다 ..
실제로 사용자에게 보여지는 웹이기에 크기, 색깔, 구성 등 정말 많이 고민하고 수정했던 것 같다.
재밌었지만 디자인에 대해 내가 더 알았다면 더 좋은 페이지를 만들 수 있지 않았을까라는 아쉬움이 있다.</p>
<p>나중에는 <a href="https://www.w3.org/standards/semanticweb/" target="_blank" rel="noopener noreferer">Semantic Web</a> 구성을 신경 쓰면서 개발 하고 싶다. div가 더 좋은 코드라고 생각했는데 공부를 하다 보니 Semantic Web 구성이 더 의미 있는 코드라는 걸 알게 되었다.</p>
<h3 id="backend">Backend</h3>
<p>나는 Frontend였지만 Backend에서 배운 점도 많다.</p>
<p>로그인, 회원가입, CRUD 등등 Frontend와 어떻게 연결이 되는지 어떤 식으로 짜야 되는지 나도 많이 배울 수 있었고 Backend에 대해 호기심도 많이 느꼈다.</p>
<p><del>근데 나는 Frontend가 더 잘 맞는 것 같다 ..🤫</del></p>
<h3 id="오류">오류</h3>
<p>개발을 하면서 많은 오류를 접했다.
그중에서 가장 기억에 남는 오류는 버전 오류였다.</p>
<p>Backend를 맡은 팀원 중 한 분이 Mac이고 Frontend는 모두 Window였다.
회원가입 기능을 Frontend와 Backend merge하는 과정에서 기능이 실행이 되지 않았다. 계속해보던 중 Mac에서는 기능이 되고 Window에서는 기능이 작동하지 않는다는 걸 알게 되었다. 🤯
알고 보니 Mac의 Python버전과 Window의 <b>Python버전</b>이 달라 Window은 실행이 안 되고 Mac은 실행이 잘됐던 거였다.</p>
<p>그래서 winvenv를 따로 만들어 Mac 가상환경과 3.9.6 버전으로 통일했더니 기능이 잘 작동했다.
개발하기 전에 버전 얘기를 하는 걸 생각을 못 하고 있었는데 이번 기회에 많이 배울 수 있었다.</p>
<h3 id="git">Git</h3>
<p>전에는 git에 대해 자세히 알지 못했다.
개인 프로젝트를 주로 해서 git add, commit , push만 하고 다른 git 명령어들은 잘 몰랐다.</p>
<p>-브랜치 생성하기
git branch 브랜치명</p>
<p>-git 2.23.0 버전 이후
checkout이 아래 두 가지로 분리되었다.
switch: 브랜치 변경
restore: 변경사항 복원</p>
<p>-브랜치 이동하기
git switch 브랜치명</p>
<p>-브랜치 생성과 동시에 이동하기
git switch -c 브랜치명</p>
<p>-수정한 파일 되돌리기
git restore 파일명</p>
<p><del>git checkout 브랜치명
git checkout -b 브랜치명</del></p>
<p>-브랜치 확인하기
git branch</p>
<p>-클론 받은 곳에서 추가적으로 다운로드
git pull origin 브랜치명</p>
<p>-커밋한 내용을 업로드
git push origin 브랜치명</p>
<p>-브랜치 합치기
git merge 브랜치명</p>
<p>-remote 갱신
git remote update</p>
<p>-remote 브랜치 가져오기
git checkout -t origin/원격에 있는 브랜치 명</p>
<p>-migrate 초기화
find . -path "<em>/migrations/</em>.py" -not -name "<strong>init</strong>.py" -delete
find . -path "<em>/migrations/</em>.pyc" -delete</p>
<p>이번 BOOKREST를 통해 git이랑 정말 많이 친해졌다. 😋</p>
<h3 id="pull-request">Pull Request</h3>
<p>BOOKREST는 각자 브랜치를 파서 merge 하는 방식으로 협업을 했었는데 협업이 용이한 <a href="https://docs.github.com/en/github/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests" target="_blank" rel="noopener noreferer">Pull Request</a>로 협업을 해보고 싶다. 더 공부해서 사람들한테 공유해야겠다.</p>
<h3 id="배포">배포</h3>
<p>👉🏻👉🏻 <a href="https://sharebookrest.herokuapp.com/" target="_blank" rel="noopener noreferer">BOOKREST</a></p>
<h3 id="해커톤-best-10-수상">해커톤 BEST 10 수상!</h3>
<p>21.08.20
상상도 못했는데 BOOKREST가 BEST 10에 들었다.
심사위원분들 앞에서 BOOKREST를 보여줄 수 있었고 피드백 받으면서 부족한 점을 알 수 있었다. 정말 뜻 깊은 경험이었다.😭</p>
<p><img src="https://images.velog.io/images/seulhyi/post/5a5b7f91-0b73-4103-a781-d04d4c45bee9/KakaoTalk_20210822_002653863.jpg" alt=""></p>
<hr>
<h2 id="느낀-점" class="heading">느낀 점</h2>
<p>BOOKREST를 통해 정말 많이 배웠고 많은 도움이 됐다.
나의 멋쟁이 사자처럼 중앙 해커톤이 BOOKREST로 마칠 수 있어서 더 의미있었고 재밌었다 !!</p>
<p><img src="https://images.velog.io/images/seulhyi/post/dea0c7f0-5f2f-4d30-9884-9bbd39e8e237/KakaoTalk_20210702_210407306_05.jpg" alt=""></p>
<p><strong>BOOKREST 최고 !!!!</strong>
🦁👋🏻👋🏻👋🏻</p>]]>
    </content:encoded>
  </item><item>
    <title><![CDATA[[BOOKREST] HTML DOM Change Animation]]></title>
    <link>https://www.seulheehan.com//htmlDom</link>
    <pubDate>2021-08-04</pubDate>
    <guid isPermaLink="false">https://www.seulheehan.com//htmlDom</guid>
    <description>
    <![CDATA[HTML DOM Change Animation에 관해 공유합니다.]]>
    </description>
    <content:encoded>
      <![CDATA[<p><img src="https://images.velog.io/images/seulhyi/post/256e4cca-3388-4170-96cc-67e5e6d91e52/image.png" alt=""></p>
<p>BOOKREST Notice 페이지 (서비스 소개, 규정, 오시는 길, 문의하기 페이지가 모여있는 곳)을 만들던 도중</p>
<blockquote>
<p>새로고침이 아닌 Animation으로 페이지를 나타내자!</p>
</blockquote>
<p>라는 생각이 들었다.</p>
<p>animation으로 페이지 이동을 하려면 html에서는 animation을 줄 페이지들을 한 템플릿 안에서 만들어야 한다.</p>
<h2 id="개발" class="heading">개발</h2>
<p><b>html</b></p>
<pre class="language-html"><code class="language-html code-highlight"><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noticeTool__category<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noticeTool__category__title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>BOOKREST 이용안내<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noticeTool__category__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js-introduceA js-noticeTool__category__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>BOOKREST란<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>a</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js-ruleA js-noticeTool__category__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>규정<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>a</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js-faqA js-noticeTool__category__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>자주 묻는 질문<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>a</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>a</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>js-bookrestMapA js-noticeTool__category__link<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>오시는 길<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>a</span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span></code></pre>
<p>먼저, a링크를 달아서 내용 폼에 관련한 각각의 제목을 적어준다.
자세한 개발 사항은 a링크 BOOKREST란? , 규정 두 가지로 얘기하도록 하겠다.</p>
<p>class 명은 BEM방식으로 지으려고 노력했다.
👉🏻 <a href="https://nykim.work/15" target="_blank" rel="noopener noreferer">CSS BEM 참고</a></p>
<p><b>a class="js-introduceA"를 누르면 나오는 폼</b></p>
<pre class="language-html"><code class="language-HTML code-highlight"><span class="code-line"> <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noticeTool__summaryTool<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">   <span class="token comment">&#x3C;!-- js-introduce 여기가 포인트 --></span>
</span><span class="code-line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noticeTool__summaryTool__box js-introduce noticeShowing<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noticeTool__summaryTool__box__title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>h1</span><span class="token punctuation">></span></span>BOOKREST란?<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>h1</span><span class="token punctuation">></span></span>
</span><span class="code-line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span><span class="code-line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noticeTool__summaryTool__box__summary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">          BOOKREST는 전공 서적을 대여해주는 서비스입니다. 학기마다 전공 책을
</span><span class="code-line">          새로 구매하시나요? 구매하셨다면 가격이 부담스럽지 않으셨나요?
</span><span class="code-line">          머라머라머라
</span><span class="code-line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span><span class="code-line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span></code></pre>
<p><b>a class="js-ruleA" 를 누르면 나오는 폼</b></p>
<pre class="language-html"><code class="language-HTML code-highlight"><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noticeTool__summaryTool<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">      <span class="token comment">&#x3C;!-- js-rule 여기가 포인트 --></span>
</span><span class="code-line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noticeTool__summaryTool__box js-rule<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noticeTool__summaryTool__box__title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>h1</span><span class="token punctuation">></span></span>Rule<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>h1</span><span class="token punctuation">></span></span>
</span><span class="code-line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span><span class="code-line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>noticeTool__summaryTool__box__summary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">          <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>b</span><span class="token punctuation">></span></span>Book<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>b</span><span class="token punctuation">></span></span>
</span><span class="code-line">          책의 종류와 재고는 BOOKREST 사이트에서 확인해주시면 됩니다. 직접
</span><span class="code-line">          오셔서 대여하려 하시면 이미 예약된 책들도 있어 어려우실 수 있습니다.
</span><span class="code-line">          BOOKREST 사이트에서 미리 예약하시면 더 빠르고 쉽게 대여하실 수
</span><span class="code-line">          있습니다.
</span><span class="code-line">          머라머라머라
</span><span class="code-line">        <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span><span class="code-line">      <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span></code></pre>
<p>위의 두 폼 모두 한 템플릿에서 쓰인 코드다.
class명, css는 모두 똑같고 BEM방식으로 js-introduce, js-rule이라 써준다.</p>
<hr>
<p><b>이제 Javascript에서 각각의 a링크를 클릭하면 그에 맞는 폼이 나오도록 만들면 된다.</b></p>
<p><b>Javascript</b></p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token comment">// 각각 내용이 있는 폼</span>
</span><span class="code-line"><span class="token keyword">const</span> introduce <span class="token operator">=</span> <span class="token dom variable">document</span><span class="token punctuation">.</span><span class="token method function property-access">querySelector</span><span class="token punctuation">(</span><span class="token string">'.js-introduce'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">const</span> rule <span class="token operator">=</span> <span class="token dom variable">document</span><span class="token punctuation">.</span><span class="token method function property-access">querySelector</span><span class="token punctuation">(</span><span class="token string">'.js-rule'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token comment">// a링크</span>
</span><span class="code-line"><span class="token keyword">const</span> introduceA <span class="token operator">=</span> <span class="token dom variable">document</span><span class="token punctuation">.</span><span class="token method function property-access">querySelector</span><span class="token punctuation">(</span><span class="token string">'.js-introduceA'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">const</span> ruleA <span class="token operator">=</span> <span class="token dom variable">document</span><span class="token punctuation">.</span><span class="token method function property-access">querySelector</span><span class="token punctuation">(</span><span class="token string">'.js-ruleA'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token comment">// css 애니메이션</span>
</span><span class="code-line"><span class="token keyword">const</span> <span class="token constant">NOTICESHOWING_CN</span> <span class="token operator">=</span> <span class="token string">'noticeShowing'</span><span class="token punctuation">;</span>
</span></code></pre>
<p>각각의 변수를 선언해준다. noticeShowing에 관한 코드는 아래 있다.</p>
<p><b>css</b></p>
<pre class="language-css"><code class="language-css code-highlight"><span class="code-line"><span class="token selector"><span class="token class">.noticeShowing</span></span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">scale</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<p>noticeShowing은 introduce폼과 rule폼을 보였다 사라졌다 하는 <b>animation을 주는 역할</b>을 한다.</p>
<p>근데 모든 폼이 opacity가 0이면 아무것도 안 보이니 <b>introduce폼이 기본으로 설정</b>해두었다.
따라서 위에 html을 보면 introduce폼 class에 noticeShowing이 적어져 있다.</p>
<p><b>Javascript</b></p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token keyword">const</span> elementList <span class="token operator">=</span> <span class="token punctuation">[</span>introduce<span class="token punctuation">,</span> rule<span class="token punctuation">]</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">const</span> elementLinkList <span class="token operator">=</span> <span class="token punctuation">[</span>introduceA<span class="token punctuation">,</span> ruleA<span class="token punctuation">]</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">let</span> currentIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">let</span> beforeIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
</span></code></pre>
<p>elementList 변수는 introduce와 rule 객체(DOM)가 있는 배열이다.
elementLinkList는 각각의 DOM으로 갈 수 있는 링크 태그로 이루어진 배열이다.
currentIndex는 현재 보이는 배열의 인덱스, beforeIndex는 전에 보였던 배열의 인덱스다.</p>
<p><b>Javascript</b></p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token keyword">const</span> <span class="token function-variable function">noticeInit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">  elementLinkList<span class="token punctuation">.</span><span class="token method function property-access">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">link<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">    link<span class="token punctuation">.</span><span class="token method function property-access">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">      <span class="token function">addClassNameToCurrentElement</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token function">noticeInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre>
<p>noticeInit 함수는 제일 먼저 실행되며 elementLinkList 각 요소의 EventListener를 부착한다.
이때 <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Array/map" target="_blank" rel="noopener noreferer">map 메소드</a>의 인덱스 값을 addClassNameToCurrentElement의 인자로 사용한다.</p>
<p><b>Javascript</b></p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token keyword">const</span> <span class="token function-variable function">addClassNameToCurrentElement</span> <span class="token operator">=</span> <span class="token parameter">index</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">  elementList<span class="token punctuation">[</span>beforeIndex<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">remove</span><span class="token punctuation">(</span><span class="token constant">NOTICESHOWING_CN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  elementList<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">add</span><span class="token punctuation">(</span><span class="token constant">NOTICESHOWING_CN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  beforeIndex <span class="token operator">=</span> index<span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></code></pre>
<p>link 요소가 click되면 addClassNameToCurrentElement 함수에 index 값을 인자로 실행한다.</p>
<p>elementList 배열의 beforeIndex번째 객체의 classList에 NOTICESHOWING_CN을 지워주고, elementList 배열의 index번째 객체의 classList에 NOTICESHOWING_CN을 더해준다.</p>
<p><code>beforeIndex = index;</code> beforeIndex에 인덱스 값을 할당해 주었다.
click 되면 beforeIndex번째의 NOTICESHOWING_CN를 지우면 전에 있는 건 안보이고 현재 누른 것만 보이게 되기 때문에 다음에 눌렀을 때를 위해서 beforeIndex 변수에 지금 누른 값인 index를 할당하였다.</p>
<h2 id="결과" class="heading">결과</h2>
<p><img src="https://images.velog.io/images/seulhyi/post/256e4cca-3388-4170-96cc-67e5e6d91e52/image.png" alt=""></p>
<p><img src="https://images.velog.io/images/seulhyi/post/6992cd5b-ef54-46c9-95cf-df0061c97cf4/image.png" alt=""></p>
<p>url을 보면 같은 한 페이지임을 알 수 있다.
새로고침이 아닌 오른쪽 틀이 animation으로 나오게 된다.</p>
<h2 id="refactoring-전-" class="heading">refactoring 전 ..</h2>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token keyword">const</span> <span class="token function-variable function">noticeAnimateIntroduce</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">  introduce<span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">add</span><span class="token punctuation">(</span><span class="token constant">NOTICESHOWING_CN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  rule<span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">remove</span><span class="token punctuation">(</span><span class="token constant">NOTICESHOWING_CN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  bookrestMap<span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">remove</span><span class="token punctuation">(</span><span class="token constant">NOTICESHOWING_CN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  inquiry<span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">remove</span><span class="token punctuation">(</span><span class="token constant">NOTICESHOWING_CN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token keyword">const</span> <span class="token function-variable function">noticeAnimateRule</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">  rule<span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">add</span><span class="token punctuation">(</span><span class="token constant">NOTICESHOWING_CN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  introduce<span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">remove</span><span class="token punctuation">(</span><span class="token constant">NOTICESHOWING_CN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  bookrestMap<span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">remove</span><span class="token punctuation">(</span><span class="token constant">NOTICESHOWING_CN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  inquiry<span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">remove</span><span class="token punctuation">(</span><span class="token constant">NOTICESHOWING_CN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token keyword">const</span> <span class="token function-variable function">noticeInit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">  introduceA<span class="token punctuation">.</span><span class="token method function property-access">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> noticeAnimateIntroduce<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  ruleA<span class="token punctuation">.</span><span class="token method function property-access">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> noticeAnimateRule<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  bookrestMapA<span class="token punctuation">.</span><span class="token method function property-access">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> noticeAnimateBookrestMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  inquiryA<span class="token punctuation">.</span><span class="token method function property-access">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> noticeAnimateInquiry<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token function">noticeInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre>
<p>refactoring 전에는 배열이랑 인덱스를 사용하지 않고 각 요소마다 함수를 만들었다.
하면서도 비효율적이라고 느껴졌다.</p>
<p>만약 더 많은 페이지가 추가된다고 하면 함수를 몇십 개 더 만들어야 하는 거다.
그래서 배열과 인덱스를 활용하였다.</p>
<p><b>refactoring 후 elementList와 elementLinkList의 배열에 넣어주기만 하면 된다.</b></p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token keyword">const</span> elementList <span class="token operator">=</span> <span class="token punctuation">[</span>introduce<span class="token punctuation">,</span> rule<span class="token punctuation">]</span><span class="token punctuation">;</span>
</span></code></pre>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token keyword">const</span> elementLinkList <span class="token operator">=</span> <span class="token punctuation">[</span>introduceA<span class="token punctuation">,</span> ruleA<span class="token punctuation">]</span><span class="token punctuation">;</span>
</span></code></pre>]]>
    </content:encoded>
  </item><item>
    <title><![CDATA[[BOOKREST] Slide]]></title>
    <link>https://www.seulheehan.com//slide</link>
    <pubDate>2021-08-03</pubDate>
    <guid isPermaLink="false">https://www.seulheehan.com//slide</guid>
    <description>
    <![CDATA[슬라이드 개발기를 공유합니다.]]>
    </description>
    <content:encoded>
      <![CDATA[<p>BOOKREST main 페이지에 들어갈 slide를 javascript로 개발했다.</p>
<p>slide를 통해 BOOKREST가 어떤 서비스인지 바로 알 수 있도록 하기위해 이미지를 Figma로 제작하였다.</p>
<p>포토샵을 해본 적이 별로 없어서 지인의 도움을 받아 만들어 볼 수 있었다.</p>
<h2 id="slide-사진" class="heading">Slide 사진</h2>
<p><img src="https://images.velog.io/images/seulhyi/post/a9e5fdbb-4707-4f93-947e-2b59d8c9bd98/BOOKREST_slider1.png" alt=""><img src="https://images.velog.io/images/seulhyi/post/e00163c6-db36-469e-9405-4876e4d6d08e/BOOKREST_slider4.png" alt=""><img src="https://images.velog.io/images/seulhyi/post/e18038f7-c201-479b-9dac-d1a695820296/BOOKREST_slider2.png" alt=""><img src="https://images.velog.io/images/seulhyi/post/84d22e06-6ef5-4c01-b805-ae6c50729da2/BOOKREST_slider3.png" alt=""></p>
<hr>
<h2 id="개발" class="heading">개발</h2>
<p><b>html</b></p>
<pre class="language-html"><code class="language-html code-highlight"><span class="code-line"><span class="token comment">&#x3C;!-- slide의 큰 틀 --></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token comment">&#x3C;!-- slide의 틀 --></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container__slider js-container__slider<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token comment">&#x3C;!-- slide에 들어갈 이미지 --></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container__slider__img js-container__slider__img<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{% static 'img/main.png'%}<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container__slider__img js-container__slider__img<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{% static 'img/main2.png'%}<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container__slider__img js-container__slider__img<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{% static 'img/main3.png'%}<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>img</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container__slider__img js-container__slider__img<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{% static 'img/main4.png'%}<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span></code></pre>
<p>slide 틀을 만들고 slide에 들어갈 이미지를 넣었다.
전에는 class 명을 짓기 귀찮아서 대충 짓곤 했는데 개발을 하다 보니 이 요소가 어떤 클래스고 어떤 div에 감싸져있는지 수정할 때마다 신경 써야 하는 점이 번거로웠다.</p>
<p>그래서 class 명을 <b>BEM방식</b>으로 지을려고 노력하고 있다.
실제 현업이나 팀플을 할 때에도 내가 만든 코드를 보고 무슨 코드인지 누가 봐도 다 알도록 해야 한다.
처음엔 번거로울지 몰라도 하다 보면 BEM방식이 오히려 쉽다.
👉 <a href="https://nykim.work/15" target="_blank" rel="noopener noreferer">CSS BEM 참고</a></p>
<p><b>css</b></p>
<pre class="language-css"><code class="language-css code-highlight"><span class="code-line"><span class="token selector"><span class="token class">.container</span></span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">80</span><span class="token unit">vh</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token selector"><span class="token class">.container__slider</span></span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80</span><span class="token unit">vw</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">69</span><span class="token unit">vh</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">15</span><span class="token unit">px</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token selector"><span class="token class">.js-container__slider__img</span></span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">80</span><span class="token unit">vw</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">69</span><span class="token unit">vh</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token unit">px</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">object-fit</span><span class="token punctuation">:</span> cover<span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">box-shadow</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token unit">px</span> <span class="token number">9</span><span class="token unit">px</span> <span class="token number">0</span> <span class="token hexcode color">#bdccd4</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">  <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">0.4</span><span class="token unit">s</span> ease-in-out<span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token selector"><span class="token class">.slider_showing</span></span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token property">z-index</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">transition</span><span class="token punctuation">:</span> all <span class="token number">1</span><span class="token unit">s</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<p>다른 개발을 하면서 css position을 이해하는 게 어려웠었는데 slide를 개발하면서 position을 전보다는 이해할 수 있었다.</p>
<p>👉 <a href="https://developer.mozilla.org/ko/docs/Web/CSS/position" target="_blank" rel="noopener noreferer">CSS Position</a></p>
<p><b>Javascript</b></p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token keyword">const</span> container__slider <span class="token operator">=</span> <span class="token dom variable">document</span><span class="token punctuation">.</span><span class="token method function property-access">querySelector</span><span class="token punctuation">(</span><span class="token string">'.js-container__slider'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">const</span> firstSlide <span class="token operator">=</span> <span class="token dom variable">document</span><span class="token punctuation">.</span><span class="token method function property-access">querySelector</span><span class="token punctuation">(</span><span class="token string">'.js-container__slider__img'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token keyword">const</span> <span class="token constant">SHOWING_CN</span> <span class="token operator">=</span> <span class="token string">'slider_showing'</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">const</span> <span class="token constant">IMG_NUM</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
</span></code></pre>
<p>먼저 slide 틀과 slide 이미지들을 querySelector로 가져왔고, animation 역할을 할 slider_showing과 slide에 들어갈 사진 수를 변수로 만들어 주었다.</p>
<p><b>Javascript</b></p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token keyword">const</span> <span class="token function-variable function">handleSlideClick</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token function">changeSlide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token keyword">const</span> <span class="token function-variable function">slideInit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token function">changeSlide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token function">setInterval</span><span class="token punctuation">(</span>changeSlide<span class="token punctuation">,</span> <span class="token number">5900</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">  <span class="token comment">// container__slider를 클릭했을 때 handleSlideClick 함수를 실행해라</span>
</span><span class="code-line">  container__slider<span class="token punctuation">.</span><span class="token method function property-access">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> handleSlideClick<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token function">slideInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre>
<p>init 함수를 slideInit이라 지은 이유는 slide.js 제외한 다른 javascript가 연결된 상태에서 두 js 모두 init이라고 쓰면 js가 제대로 실행이 안된다.</p>
<p>그래서 나는 javascript를 할 때마다 js의 기능을 써주고 Init을 붙인다.</p>
<h2 id="setinterval" class="heading">setInterval</h2>
<p>setInterval이란 일정한 시간 간격으로 작업을 수행하기 위해 사용하는 함수다.
나는 클릭 이외에도 시간이 지나면 슬라이드가 자동으로 넘어가도록 하기 위해 setInterval 함수를 이용했다.</p>
<p><b>Javascript</b></p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token keyword">const</span> <span class="token function-variable function">changeSlide</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token keyword">const</span> currentSlide <span class="token operator">=</span> container__slider<span class="token punctuation">.</span><span class="token method function property-access">querySelector</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">SHOWING_CN</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">  <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>currentSlide <span class="token operator">!==</span> <span class="token keyword null nil">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">    currentSlide<span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">remove</span><span class="token punctuation">(</span><span class="token constant">SHOWING_CN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token keyword">const</span> nextSlide <span class="token operator">=</span> currentSlide<span class="token punctuation">.</span><span class="token property-access">nextElementSibling</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">    <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>nextSlide<span class="token punctuation">.</span><span class="token property-access">className</span> <span class="token operator">!==</span> <span class="token string">'blank'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">      nextSlide<span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">add</span><span class="token punctuation">(</span><span class="token constant">SHOWING_CN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span> <span class="token keyword control-flow">else</span> <span class="token punctuation">{</span>
</span><span class="code-line">      firstSlide<span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">add</span><span class="token punctuation">(</span><span class="token constant">SHOWING_CN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token punctuation">}</span>
</span><span class="code-line">  <span class="token punctuation">}</span> <span class="token keyword control-flow">else</span> <span class="token punctuation">{</span>
</span><span class="code-line">    firstSlide<span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">add</span><span class="token punctuation">(</span><span class="token constant">SHOWING_CN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token punctuation">}</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></code></pre>
<p>currentSlide 변수를 보면</p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">.</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">SHOWING_CN</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>
</span></code></pre>
<p>이라는 특이한 코드가 보인다.</p>
<p>감싸져있는 것을 <b>백틱 (``)</b>이라고 하는데
백틱은 <b>문자열 표기법</b>이다.</p>
<p>따라서 ${} 사이에 변수나 연산 등을 삽입 후 백틱으로 감싸면 문자열로 자동 변환된다.</p>
<blockquote>
<p>즉, 컨테이너 슬라이더 객체(DOM) 안에서 "slider_showing" 클래스를 가진 애를 currentSlide 변수에 넣는 것이다.</p>
</blockquote>
<p><b>nextElementSibling</b>
if문 안에 nextSlide 변수를 보면 nextElementSibling method가 있다,
nextElementSibling은 해당 요소 바로 다음 요소를 가져오는 역할을 한다.</p>
<p>👉 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Element/nextElementSibling" target="_blank" rel="noopener noreferer">Element.nextElementSibling</a></p>
<p>이를 통해 slide가 계속 돌아갈 수 있게 하였다.</p>
<h2 id="결과" class="heading">결과</h2>
<p><img src="https://images.velog.io/images/seulhyi/post/7ee34702-2e48-4644-bd43-14b344a007d7/image.png" alt=""></p>
<p><img src="https://images.velog.io/images/seulhyi/post/413026a3-5dbc-4da1-a3ca-8e0069a3b055/image.png" alt=""></p>
<p>정해진 시간이 지나거나 사용자가 클릭했을 때 slide가 넘어간다.</p>]]>
    </content:encoded>
  </item><item>
    <title><![CDATA[[BOOKREST] <details>]]></title>
    <link>https://www.seulheehan.com//details</link>
    <pubDate>2021-07-27</pubDate>
    <guid isPermaLink="false">https://www.seulheehan.com//details</guid>
    <description>
    <![CDATA[details 태그에 관해 공유합니다.]]>
    </description>
    <content:encoded>
      <![CDATA[<p><img src="https://user-images.githubusercontent.com/63100352/175520730-91cded30-dcea-4fee-891d-1b7e930b26e1.png" alt="캡처dfdf"></p>
<p>몇 주 전에 알게 된 html의 새로운 태그가 있다.</p>
<p><b>바로 details 태그 !!</b></p>
<p>details 태그는 "열림" 상태일 때만 내부 정보를 보여주는 정보 공개 위젯을 생성한다.</p>
<blockquote>
<p>이게 무슨 일인가 ..🙄 이런 기능은 Javascripts로 구현하는 줄만 알았는데 html에 태그를 써주기만 하면 된다.</p>
</blockquote>
<p>이러한 details 요소의 콘텐츠는 open 속성이 설정되기 전까지는 화면에 보이지 않는다.</p>
<p>summary 요소는 details 요소에서 화면에 보일 제목을 명시할 때 사용한다.
이 summary를 마우스로 클릭함으로써 details 요소를 보이도록 할 수도 있고 숨길 수도 있다. (ex: toggle)</p>
<h2 id="개발" class="heading">개발</h2>
<p>BOOKREST에 문의하기(inquiry) 페이지를 개발해야 하는데 어떻게 디자인할지 고민이었다.</p>
<p>이때 전에 details 태그를 본 게 기억나 이번에 적용해보기로 했다.</p>
<p><b>자주 묻는 질문이라는 제목 아래에 details 태그를 사용했다.</b></p>
<p><b>html</b></p>
<pre class="language-html"><code class="language-html code-highlight"><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>details</span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>summary</span><span class="token punctuation">></span></span>한 사람당 책 몇 권까지 대여 가능한가요?<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>summary</span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>details__content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>5권까지 대여 가능합니다.<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>details</span><span class="token punctuation">></span></span>
</span></code></pre>
<p>details 태그 안에 summary 태그를 넣어 제목을 만들어주고 그 아래에 답변을 적었다.
css를 적용하기 위해 답변에 class를 만들어 줬다.</p>
<p><b>css</b></p>
<pre class="language-css"><code class="language-css code-highlight"><span class="code-line"><span class="token selector">details<span class="token attribute"><span class="token punctuation">[</span><span class="token attr-name">open</span><span class="token punctuation">]</span></span> <span class="token combinator">~</span> \*</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token property">animation</span><span class="token punctuation">:</span> sweep <span class="token number">0.5</span><span class="token unit">s</span> ease-in-out<span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token atrule"><span class="token rule">@keyframes</span> sweep</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token selector">from</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">-10</span><span class="token unit">px</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token punctuation">}</span>
</span><span class="code-line">  <span class="token selector">to</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token property">opacity</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token punctuation">}</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<p>animation을 이용해 details 태그가 open되었을 때 효과를 넣어주었다.</p>
<h2 id="결과" class="heading">결과</h2>
<p><b>open 전</b>
<img src="https://user-images.githubusercontent.com/63100352/175520766-e9b53f27-a53a-4b43-a9b0-dd0bb89a3547.png" alt="images_seulhyi_post_c76d2deb-33a9-4181-a470-19706db2c45f_image"></p>
<p><b>open 후</b>
<img src="https://user-images.githubusercontent.com/63100352/175520837-95469ade-8103-49eb-98dc-a6179e4d4df3.png" alt="images_seulhyi_post_56c71324-317c-42d2-9e2d-68e03ce55058_image">
summary에 적은 내용이 제목으로 들어갔고 open되었을 때 summary 태그 아래에 적은 내용이 나온다.</p>]]>
    </content:encoded>
  </item><item>
    <title><![CDATA[[BOOKREST] Kakao Maps API]]></title>
    <link>https://www.seulheehan.com//kakaoMap</link>
    <pubDate>2021-07-27</pubDate>
    <guid isPermaLink="false">https://www.seulheehan.com//kakaoMap</guid>
    <description>
    <![CDATA[카카오 맵 api 사용한 경험을 공유합니다.]]>
    </description>
    <content:encoded>
      <![CDATA[<p>BOOKREST는 온라인 / 오프라인 서비스다.
온라인으로 본인이 대여할 책을 예약하고 성공회대 BOOKREST로 와서 대여하는 방식이다.</p>
<p>따라서 오프라인 BOOKREST 위치를 알려주기 위해 오시는 길 페이지를 개발하기로 했다.</p>
<h2 id="kakao-maps-api" class="heading">Kakao Maps API</h2>
<p>오시는 길 페이지에 Kakao map을 이용하였다.
map api는 아직까지 해본 적이 없어서 이번 기회에 배워보고 싶었다.</p>
<p>kakao 공식문서를 우선 찾아보았다.
👉🏻 <a href="https://apis.map.kakao.com/web/guide/#start" target="_blank" rel="noopener noreferer">https://apis.map.kakao.com/web/guide/#start</a></p>
<p>공식문서를 보면 자세히 설명되어있고 로드맵 등 다양한 기능들을 제공하고 있어 쉽게 이용할 수 있다.</p>
<h2 id="개발" class="heading">개발</h2>
<p>먼저 키 발급이 필요하다.</p>
<p><a href="https://developers.kakao.com" target="_blank" rel="noopener noreferer">카카오 개발자사이트</a>에 접속하여 개발자 등록 및 앱 생성을 한다.</p>
<p>다음으로 앱 선택 > 플랫폼 > Web 플랫폼 등록 > 사이트 도메인 등록하면 된다.</p>
<p>사이트 도메인 등록: 웹 플랫폼을 선택하고, 사이트 도메인 을 등록한다.
(BOOKREST는 아직 따로 도메인이 없어 <a href="http://127.0.0.1:8000" target="_blank" rel="noopener noreferer">http://127.0.0.1:8000</a> 로 등록하였다.)</p>
<p>그 후 페이지 상단의 JavaScript 키를 지도 API의 appkey로 사용한다.</p>
<p>여기까지 완료가 되었다면 이제 코드를 이용해 만들기만 하면 된다.</p>
<p><b>html</b></p>
<pre class="language-html"><code class="language-html code-highlight"><span class="code-line"><span class="token comment">&#x3C;!-- &#x3C;div>태그로 지도를 사용할 영역을 만들어준다. --></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>map<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span></code></pre>
<p><b>css</b></p>
<pre class="language-css"><code class="language-css code-highlight"><span class="code-line"><span class="token selector"><span class="token class">.map</span></span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token unit">%</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">350</span><span class="token unit">px</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<p><b>Javascript API</b></p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token operator">&#x3C;</span>script
</span><span class="code-line">  type<span class="token operator">=</span><span class="token string">"text/javascript"</span>
</span><span class="code-line">  src<span class="token operator">=</span><span class="token string">"//dapi.kakao.com/v2/maps/sdk.js?appkey=발급받은 APP KEY를 넣으시면 됩니다."</span>
</span><span class="code-line"><span class="token operator">></span><span class="token operator">&#x3C;</span><span class="token operator">/</span>script<span class="token operator">></span>
</span></code></pre>
<p>Javascript API는 반드시 실행 코드보다 먼저 선언되어야 한다.
지도 API의 appkey를 복사해 코드에 넣어주면 API를 받아온 것이다.</p>
<p><b>Javascript</b></p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token keyword">const</span> container <span class="token operator">=</span> <span class="token dom variable">document</span><span class="token punctuation">.</span><span class="token method function property-access">querySelector</span><span class="token punctuation">(</span><span class="token string">'.map'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token literal-property property">center</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">kakao<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>LatLng</span><span class="token punctuation">(</span><span class="token number">37.48779388711603</span><span class="token punctuation">,</span> <span class="token number">126.82514044863785</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token comment">// 지도의 중심좌표</span>
</span><span class="code-line">  <span class="token literal-property property">level</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment">//지도의 레벨(확대, 축소 정도)</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">kakao<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>Map</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre>
<p>지도의 중심좌표는 구글에 본인이 넣고자하는 장소를 검색해 우클릭을 하면 위치가 나온다.</p>
<p><img src="https://user-images.githubusercontent.com/63100352/175518153-7b7cd0be-7b8b-4e3c-8383-90b95282bcf2.png" alt="images_seulhyi_post_2aaaf3da-96e6-465f-8be4-64a33fcb27be_image"></p>
<p>이를 이용해 중심좌표를 정할 수 있다.</p>
<h2 id="실행" class="heading">실행</h2>
<p><img src="https://user-images.githubusercontent.com/63100352/175518162-ae80792a-1f5a-43a2-84f4-2cade11c1c17.png" alt="images_seulhyi_post_b4035597-9cb7-4069-b455-c458a84c3b6d_image"></p>
<p>중심좌표를 성공회대학교로 두어 실행을 하면 이와같이 뜬다.</p>
<blockquote>
<p>근데 이걸론 좀 아쉽다 ... 마커를 찍어볼까 ?!</p>
</blockquote>
<h2 id="마커" class="heading">마커</h2>
<p>마커란 지도에 올라가는 핀 모양의 이미지를 뜻한다.</p>
<pre class="language-javascript"><code class="language-Javascript code-highlight"><span class="code-line"><span class="token comment">// 마커가 표시될 위치입니다</span>
</span><span class="code-line"><span class="token keyword">const</span> markerPosition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">kakao<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>LatLng</span><span class="token punctuation">(</span><span class="token number">37.48829223509457</span><span class="token punctuation">,</span> <span class="token number">126.82500137418384</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token comment">// 마커를 생성합니다</span>
</span><span class="code-line"><span class="token keyword">const</span> marker <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">kakao<span class="token punctuation">.</span>maps<span class="token punctuation">.</span>Marker</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
</span><span class="code-line"><span class="token literal-property property">position</span><span class="token operator">:</span> markerPosition
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token comment">// 마커가 지도 위에 표시되도록 설정합니다</span>
</span><span class="code-line">marker<span class="token punctuation">.</span><span class="token method function property-access">setMap</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre>
<p>마커가 표시될 위치도 이전과 같이 세부적인 장소를 검색 후 위치를 넣어주면 된다.
나는 임시로 성공회대학교 구두인관으로 설정해두었다.</p>
<h2 id="결과" class="heading">결과</h2>
<p><img src="https://user-images.githubusercontent.com/63100352/175518156-59c42288-66e7-4cbd-8d34-1bfc913bcbf3.png" alt="images_seulhyi_post_f8e6f5ed-a775-4aed-96fd-783f76a5e3ff_image"></p>
<p>성공회대학교가 중심으로 찍히고 성공회대학교 구두인관에 마커가 생긴 모습을 볼 수 있다.</p>
<p>확대 축소기능은 기본이고 이외에 로드맵, 길찾기, 지도 검색 등 다양한 기능이 있어 시간이 남는다면 적용해보려고 한다.</p>]]>
    </content:encoded>
  </item><item>
    <title><![CDATA[[BOOKREST] 회원가입 Vanilla JS]]></title>
    <link>https://www.seulheehan.com//signup</link>
    <pubDate>2021-07-27</pubDate>
    <guid isPermaLink="false">https://www.seulheehan.com//signup</guid>
    <description>
    <![CDATA[회원가입 개발기를 공유합니다.]]>
    </description>
    <content:encoded>
      <![CDATA[<h2 id="이용약관" class="heading">이용약관</h2>
<p>전에는 항상 입력받는 폼만 만들었었는데 실제 서비스라 생각해보니 이용약관이 있는 게 더 좋을 것 같다는 생각이 들었다.</p>
<p>이용약관을 구글링하면 내용이 다 나와 있었다.
BOOKREST로 바꾸어 사용하였다.</p>
<p><b>html</b></p>
<pre class="language-html"><code class="language-html code-highlight"><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>signupBoxTool__signupBox__terms__title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>h3</span><span class="token punctuation">></span></span>개인정보 수집 및 이용<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>h3</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>signupBoxTool__signupBox__terms__summary<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>dl</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>dt</span><span class="token punctuation">></span></span>시행일자: 2021년 08월 14일<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>dt</span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>br</span> <span class="token punctuation">/></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>dd</span><span class="token punctuation">></span></span>
</span><span class="code-line">      BOOKREST(이하 "회사" 또는 "BOOKREST"이라고 함)은 통신비밀보호법, 전기통신사업법, 정보통신망 이용촉진 및 정보보호
</span><span class="code-line">      등에 관한 법률 등 정보통신서비스제공자가 준수하여야 할 관련 법령상의 개인정보보호 규정을 준수하며, 관련 법령에
</span><span class="code-line">      의거한 개인정보취급방침을 정하여 이용자 권익 보호에 최선을 다하고 있습니다.<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>br</span> <span class="token punctuation">/></span></span>
</span><span class="code-line">
</span><span class="code-line">      본 개인정보취급방침은 다음과 같은 내용을 담고 있습니다.<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>br</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>br</span> <span class="token punctuation">/></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>dd</span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>dl</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span></code></pre>
<p><b>css</b></p>
<pre class="language-css"><code class="language-css code-highlight"><span class="code-line"><span class="token selector"><span class="token class">.signupBoxTool__signupBox__terms__summary</span></span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">150</span><span class="token unit">px</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token unit">px</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">margin-bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<p>html dl태그는 설명 목록을 나타낸다.
dl은 dt로 표기한 용어와 dd 요소로 표기한 설명 그룹의 목록을 감싸서 설명 목록을 생성해 이용약관을 쓸 때 이를 이용하였다.</p>
<p>css를 이용해 틀을 잡아주어 안에서 스크롤 되게 만들었다.</p>
<p><img src="https://images.velog.io/images/seulhyi/post/d7edf614-0c8d-49df-9a27-8cbe586039e5/image.png" alt=""></p>
<p>이렇게 완성이 되었다.</p>
<h2 id="이용약관-javascript" class="heading">이용약관 JavaScript</h2>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token keyword">const</span> <span class="token function-variable function">termsCheckbox</span> <span class="token operator">=</span> <span class="token parameter">event</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">  event<span class="token punctuation">.</span><span class="token method function property-access">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token keyword">const</span> agreement1 <span class="token operator">=</span> <span class="token dom variable">document</span><span class="token punctuation">.</span><span class="token method function property-access">querySelector</span><span class="token punctuation">(</span><span class="token string">'.js-agreement1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token keyword">const</span> agreement2 <span class="token operator">=</span> <span class="token dom variable">document</span><span class="token punctuation">.</span><span class="token method function property-access">querySelector</span><span class="token punctuation">(</span><span class="token string">'.js-agreement2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">  <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>agreement1<span class="token punctuation">.</span><span class="token property-access">checked</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token dom variable">window</span><span class="token punctuation">.</span><span class="token method function property-access">alert</span><span class="token punctuation">(</span><span class="token string">'이용약관 이용동의는 필수입니다.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token punctuation">}</span> <span class="token keyword control-flow">else</span> <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>agreement2<span class="token punctuation">.</span><span class="token property-access">checked</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token dom variable">window</span><span class="token punctuation">.</span><span class="token method function property-access">alert</span><span class="token punctuation">(</span><span class="token string">'개인정보의 수집 및 이용동의는 필수입니다.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token punctuation">}</span> <span class="token keyword control-flow">else</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token function">signupAnimate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token punctuation">}</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></code></pre>
<p>동의, 동의 안 함 버튼을 두었고 먼저, 첫 번째 이용약관 (agreement1)을 체크 안 했다면 alert로 경고 메시지가 뜨도록 설정하였고 두 번째 이용약관(agreement2)도 마찬가지로 alert를 설정하였다.
<img src="https://images.velog.io/images/seulhyi/post/c261afa5-247d-4456-b320-73becc01e908/image.png" alt=""></p>
<p><b>Javascript</b></p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token keyword">const</span> <span class="token function-variable function">onNoregisterClick</span> <span class="token operator">=</span> <span class="token parameter">event</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">  event<span class="token punctuation">.</span><span class="token method function property-access">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span><span class="token dom variable">window</span><span class="token punctuation">.</span><span class="token method function property-access">confirm</span><span class="token punctuation">(</span><span class="token string">'회원가입을 취소하고 BOOKREST 첫 화면으로 돌아가시겠습니까?'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token dom variable">location</span><span class="token punctuation">.</span><span class="token method function property-access">replace</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token punctuation">}</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></code></pre>
<p>동의 안 함 버튼을 눌렀을 시에는 회원가입을 못 하도록 설정하였다.
replace() 메소드는 Location현재 리소스를 제공된 URL의 리소스로 바꾸는 기능을 한다.</p>
<p>replace()는 현재 페이지를 새로운 페이지로 덮어씌우기 때문에 이전 페이지로 이동이 불가능하다.</p>
<p><img src="https://images.velog.io/images/seulhyi/post/2c9214f3-6549-452e-9667-9a114f20a39c/image.png" alt=""></p>
<p><strong>이렇게 해서 모든 이용약관을 동의 후 동의 버튼을 누르면 정보입력 폼이 나오게 된다.</strong></p>
<hr>
<h2 id="정보입력" class="heading">정보입력</h2>
<p>회원가입에서 받을 정보</p>
<ol>
<li>이름</li>
<li>학부 / 전공</li>
<li>학번</li>
<li>이메일</li>
<li>비밀번호</li>
<li>전화번호</li>
</ol>
<blockquote>
<p>그냥 입력폼만 있는 건 BOOKREST랑 안어울려 .. 양식을 두자 !</p>
</blockquote>
<h2 id="정보입력-양식" class="heading">정보입력 양식</h2>
<ol>
<li>이름이 2자 이상</li>
<li>학번은 9자리 (우리 학교 기준)</li>
<li>이메일 정규표현식에 맞아야 함</li>
<li>비밀번호는 6자리 이상</li>
<li>BOOKREST 이용 규정에 동의하는 checkbox에 체크해야 함</li>
</ol>
<h3 id="그-외">그 외</h3>
<p>학부 / 전공은 select 태그로 총 네 개의 학부 중 하나를 선택하도록 (우리 학교 기준)
전화번호는 그냥 입력받을지 막대기(-) 할지 아직 고민중이다.</p>
<p><b>html</b></p>
<pre class="language-html"><code class="language-html code-highlight"><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>signupBoxTool__signupBox__form-control<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>signupBoxTool__signupBox__form-control__title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
</span><span class="code-line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>span</span><span class="token punctuation">></span></span>이름<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>span</span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name input<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Enter username<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
</span><span class="code-line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;</span>small</span><span class="token punctuation">></span></span>Error message<span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>small</span><span class="token punctuation">></span></span>
</span><span class="code-line"><span class="token tag"><span class="token tag"><span class="token punctuation">&#x3C;/</span>div</span><span class="token punctuation">></span></span>
</span></code></pre>
<p>input 태그로 입력을 받는 곳을 두고 아래에 error message가 들어갈 곳을 만들어 준다.</p>
<p><b>css</b></p>
<pre class="language-css"><code class="language-css code-highlight"><span class="code-line"><span class="token selector"><span class="token class">.signupBoxTool__signupBox__form-control</span> small</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">11</span><span class="token unit">px</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">font-weight</span><span class="token punctuation">:</span> <span class="token number">500</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token property">visibility</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token selector"><span class="token class">.signupBoxTool__signupBox__form-control</span><span class="token class">.error</span> small</span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token property">visibility</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span>
</span></code></pre>
<p>visible - 요소가 보이고, hidden - 요소가 숨겨진다 (그려지지 않음).
css를 이렇게 설정해두고 Javascript로 코드만 짜면 된다.</p>
<p><b>Javascript</b></p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token keyword">const</span> <span class="token function-variable function">loadName</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token property-access">value</span><span class="token punctuation">.</span><span class="token property-access">length</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token function">errorRed</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">사용자 이름은 2자 이상이어야 합니다</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token punctuation">}</span> <span class="token keyword control-flow">else</span> <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token property-access">value</span><span class="token punctuation">.</span><span class="token property-access">length</span> <span class="token operator">>=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token function">successLight</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token punctuation">}</span> <span class="token keyword control-flow">else</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token function">errorRed</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">사용자 이름은 2자 이상이어야 합니다</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token punctuation">}</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token keyword">const</span> <span class="token function-variable function">signInit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">  name<span class="token punctuation">.</span><span class="token method function property-access">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> loadName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  email<span class="token punctuation">.</span><span class="token method function property-access">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> checkEmail<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  password<span class="token punctuation">.</span><span class="token method function property-access">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> checkPassword<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  studentID<span class="token punctuation">.</span><span class="token method function property-access">addEventListener</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">,</span> checkstudentID<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  checkbox<span class="token punctuation">.</span><span class="token method function property-access">addEventListener</span><span class="token punctuation">(</span><span class="token string">'change'</span><span class="token punctuation">,</span> handleCheckboxForm<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line">  signupForm<span class="token punctuation">.</span><span class="token method function property-access">addEventListener</span><span class="token punctuation">(</span><span class="token string">'submit'</span><span class="token punctuation">,</span> <span class="token parameter">e</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">    e<span class="token punctuation">.</span><span class="token method function property-access">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token function">checkPassword</span><span class="token punctuation">(</span>password<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token function">loadName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token function">checkEmail</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token function">checkstudentID</span><span class="token punctuation">(</span>studentID<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">    <span class="token function">handleCheckboxForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span><span class="code-line">
</span><span class="code-line"><span class="token function">signInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre>
<p><del>양식이 많아 이름만 기록해야겠다..</del>
먼저 등록 버튼을 누를시 (submit) 아래 함수들이 실행되게 설정하였고 또한 input 창에 내용을 적을 때 위와 같은 함수가 실행되도록 하였다.</p>
<p>loadName 함수는 사용자가 입력한 길이가 0일 경우 아래와 같은 error메시지가 뜨도록 하였다.
``은 "백틱(backtick)" 이라고 하는데 자세한 내용은 <a href="https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Template_literals" target="_blank" rel="noopener noreferer">여기</a>를 참고하면 좋을 것 같다.</p>
<p>사용자가 입력한 길이가 2 이상일 경우 successLight라는 함수를 실행하는데 successLight 함수는 아래와 같이 error를 classList에서 빼주는 기능이다. 즉 양식에 맞아 에러 메시지가 안 뜨도록 한 것이다.</p>
<p><b>Javascript</b></p>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token keyword">const</span> <span class="token function-variable function">successLight</span> <span class="token operator">=</span> <span class="token parameter">input</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token keyword">const</span> formControl <span class="token operator">=</span> input<span class="token punctuation">.</span><span class="token property-access">parentElement</span><span class="token punctuation">;</span>
</span><span class="code-line">  formControl<span class="token punctuation">.</span><span class="token property-access">classList</span><span class="token punctuation">.</span><span class="token method function property-access">remove</span><span class="token punctuation">(</span><span class="token string">'error'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></code></pre>
<pre class="language-javascript"><code class="language-javascript code-highlight"><span class="code-line"><span class="token keyword">const</span> <span class="token function-variable function">checkEmail</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">{</span>
</span><span class="code-line">  <span class="token keyword">const</span> emailRule <span class="token operator">=</span>
</span><span class="code-line">    <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex"><span class="token anchor function">^</span><span class="token group punctuation">(</span><span class="token group punctuation">(</span><span class="token char-class"><span class="token char-class-punctuation punctuation">[</span><span class="token char-class-negation operator">^</span>&#x3C;>()<span class="token special-escape escape">\[</span><span class="token special-escape escape">\]</span><span class="token special-escape escape">\\</span>.,;:<span class="token char-set class-name">\s</span>@"<span class="token char-class-punctuation punctuation">]</span></span><span class="token quantifier number">+</span><span class="token group punctuation">(</span><span class="token special-escape escape">\.</span><span class="token char-class"><span class="token char-class-punctuation punctuation">[</span><span class="token char-class-negation operator">^</span>&#x3C;>()<span class="token special-escape escape">\[</span><span class="token special-escape escape">\]</span><span class="token special-escape escape">\\</span>.,;:<span class="token char-set class-name">\s</span>@"<span class="token char-class-punctuation punctuation">]</span></span><span class="token quantifier number">+</span><span class="token group punctuation">)</span><span class="token quantifier number">*</span><span class="token group punctuation">)</span><span class="token alternation keyword">|</span><span class="token group punctuation">(</span>"<span class="token char-set class-name">.</span><span class="token quantifier number">+</span>"<span class="token group punctuation">)</span><span class="token group punctuation">)</span>@<span class="token group punctuation">(</span><span class="token group punctuation">(</span><span class="token special-escape escape">\[</span><span class="token char-class"><span class="token char-class-punctuation punctuation">[</span><span class="token range">0<span class="token range-punctuation operator">-</span>9</span><span class="token char-class-punctuation punctuation">]</span></span><span class="token quantifier number">{1,3}</span><span class="token special-escape escape">\.</span><span class="token char-class"><span class="token char-class-punctuation punctuation">[</span><span class="token range">0<span class="token range-punctuation operator">-</span>9</span><span class="token char-class-punctuation punctuation">]</span></span><span class="token quantifier number">{1,3}</span><span class="token special-escape escape">\.</span><span class="token char-class"><span class="token char-class-punctuation punctuation">[</span><span class="token range">0<span class="token range-punctuation operator">-</span>9</span><span class="token char-class-punctuation punctuation">]</span></span><span class="token quantifier number">{1,3}</span><span class="token special-escape escape">\.</span><span class="token char-class"><span class="token char-class-punctuation punctuation">[</span><span class="token range">0<span class="token range-punctuation operator">-</span>9</span><span class="token char-class-punctuation punctuation">]</span></span><span class="token quantifier number">{1,3}</span><span class="token special-escape escape">\]</span><span class="token group punctuation">)</span><span class="token alternation keyword">|</span><span class="token group punctuation">(</span><span class="token group punctuation">(</span><span class="token char-class"><span class="token char-class-punctuation punctuation">[</span><span class="token range">a<span class="token range-punctuation operator">-</span>z</span><span class="token range">A<span class="token range-punctuation operator">-</span>Z</span><span class="token escape">\-</span><span class="token range">0<span class="token range-punctuation operator">-</span>9</span><span class="token char-class-punctuation punctuation">]</span></span><span class="token quantifier number">+</span><span class="token special-escape escape">\.</span><span class="token group punctuation">)</span><span class="token quantifier number">+</span><span class="token char-class"><span class="token char-class-punctuation punctuation">[</span><span class="token range">a<span class="token range-punctuation operator">-</span>z</span><span class="token range">A<span class="token range-punctuation operator">-</span>Z</span><span class="token char-class-punctuation punctuation">]</span></span><span class="token quantifier number">{2,}</span><span class="token group punctuation">)</span><span class="token group punctuation">)</span><span class="token anchor function">$</span></span><span class="token regex-delimiter">/</span></span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token keyword control-flow">if</span> <span class="token punctuation">(</span>emailRule<span class="token punctuation">.</span><span class="token method function property-access">test</span><span class="token punctuation">(</span>email<span class="token punctuation">.</span><span class="token property-access">value</span><span class="token punctuation">.</span><span class="token method function property-access">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token function">successLight</span><span class="token punctuation">(</span>email<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token punctuation">}</span> <span class="token keyword control-flow">else</span> <span class="token punctuation">{</span>
</span><span class="code-line">    <span class="token function">errorRed</span><span class="token punctuation">(</span>email<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">이메일이 유효하지 않습니다</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span><span class="code-line">  <span class="token punctuation">}</span>
</span><span class="code-line"><span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></code></pre>
<p>이메일 정규표현식은 구글링해보면 쉽게 나온다.</p>
<hr>
<h2 id="결과" class="heading">결과</h2>
<p>에러 메시지가 안 떴을 때</p>
<p><img src="https://images.velog.io/images/seulhyi/post/bc35258d-baf8-4331-9c32-ee99ba1df455/image.png" alt=""></p>
<p>아무것도 안 쓰고 등록 버튼을 눌렀을 때</p>
<p><img src="https://images.velog.io/images/seulhyi/post/efafd5e3-5e93-4cd2-a5cb-a08dc4327f21/image.png" alt=""></p>
<p>실행해보면 input창에 정보양식에 맞게 입력하면 해당 오류 메시지가 사라진다.</p>]]>
    </content:encoded>
  </item><item>
    <title><![CDATA[전공 서적 대여 서비스 BOOKREST]]></title>
    <link>https://www.seulheehan.com//bookrest</link>
    <pubDate>2021-07-26</pubDate>
    <guid isPermaLink="false">https://www.seulheehan.com//bookrest</guid>
    <description>
    <![CDATA[멋쟁이사자처럼 9기 해커톤 출품작을 소개합니다.]]>
    </description>
    <content:encoded>
      <![CDATA[<p><img src="https://user-images.githubusercontent.com/63100352/164908304-38848ff6-47ab-40c0-8794-aecd39de3c8c.png" alt="mainphoto"></p>
<p>멋쟁이 사자처럼 9기 운영진으로 해커톤을 준비 중이다.</p>
<p>서비스 명은 BOOKREST로 전공 서적을 대여해주는 서비스이다.</p>
<h2 id="bookrest란" class="heading">BOOKREST란?</h2>
<blockquote>
<p>매 학기마다 전공 책을 새로 구매해야 하고 구매할 때마다 가격이 부담스럽다 💦</p>
</blockquote>
<p>라는 아이디어로 시작하게 된 전공서적대여 서비스다.</p>
<p>모두가 함께 사용하는 전공 책을 개별적으로 사지 않고 교내에서 대여하여 사용한다면 많은 학생에게 책값 부담을 크게 덜어줄 수 있지 않을까 라는 생각이 들었다. 🤔🤔</p>
<p>BOOK + FOREST = 전공 서적을 무료로 쉽게 대여할 수 있는 공유의 숲이라는 의미로,
서점, 중고거래, 도서관의 단점을 보완한 오로지 학생들을 위한 서비스다.</p>
<p><strong>BOOKREST 아이디어 톤 영상 링크 (아이디어톤 Best 10 수상 🎉)</strong>
👉🏻 <a href="https://youtu.be/XHpNr5cEKGY" target="_blank" rel="noopener noreferer">https://youtu.be/XHpNr5cEKGY</a></p>
<h2 id="what-어떤-서비스" class="heading">What (어떤 서비스)</h2>
<p>BOOKREST 서비스는 무엇을 대여해주는가 하면 모든 학과, 모든 학년, 모든 과목의 학기마다 필요한 전공 서적을 교내에 여러권 비치하여 책 정보와 수업 정보까지 BOOKREST 책 리스트 페이지에서 확인할 수 있다.</p>
<p>실제 BOOKREST의 한 페이지에서 수업에 필요한 책 리스트들이 학부별로 정렬되어 있고 책 상세 페이지에서 책의 정보뿐만 아니라 책이 사용된 수업 정보와 교수님까지 확인 할 수 있다.</p>
<h2 id="who-누구를-위한" class="heading">Who (누구를 위한)</h2>
<p>매 학기 수업 교재가 필요한 학생들을 위해
비싼 전공 서적을 부담 없이 대여하고 싶은 학생들을 위해
수업에 사용되는 책의 정보와 수업 정보까지 한눈에 확인하고 싶은 학생들을 위한 서비스다.</p>
<p>초기모델의 주 서비스 이용자는 우리 학교 학생들이다. 우리 학교 내에서 서비스가 잘 활성화가 되고, 좋은 반응을 보인다면 추후에 학교별 연합 BOOKREST 사업을 진행하면 좋겠다는 생각도 갖고 있다.</p>
<p><strong>비즈니스 모델</strong></p>
<p><img src="https://user-images.githubusercontent.com/63100352/164901969-d558a377-39b6-4881-8c74-9dbb53c54f14.png" alt="images_seulhyi_post_c7d1921c-6048-4560-a923-2837cd72213a_Untitled (1)"></p>
<p>BOOKREST의 비즈니스 모델이다.
초기모델에서는 배송업체를 파트너로 선정하여 대여한 책을 배송해주는 서비스로 진행하려 했으나, 배송 과정이 번거롭고 비용도 부담이 될 것 같아 교내에서 직접 대여할 수 있는 대면 서비스로 전환하였다.</p>
<h2 id="기대효과" class="heading">기대효과</h2>
<p>매 학기 학생들의 교재 부담이 크게 감소할 것이며 학기 초 마다 학생들은 교재를 쉽게 준비할 수 있어 수업의 참여도가 향상될 수 있다.</p>
<p>또한 수강 신청하지 않았지만, 평소에 관심 있었던 수업의 교재를 쉽게 대여하여 공부할 수 있다.</p>
<h2 id="개발-진행" class="heading">개발 진행</h2>
<p><img src="https://user-images.githubusercontent.com/63100352/164901939-67c3301d-a43d-4551-86af-cd393662e7bf.png" alt="images_seulhyi_post_2c9274ab-8549-4282-ac7d-95981e415fc6_bookrest_figma"></p>
<p>피그마를 이용하여 전체적인 기획, 페이지의 상세한 기능 그리고 디자인을 함께 논의하였다.
이를 바탕으로 아이디어 톤과 해커톤 개발을 진행하고 있다.</p>
<p><img src="https://user-images.githubusercontent.com/63100352/164901908-81f8c81f-cfc2-44d1-bfd5-f27ce90826c9.png" alt="images_seulhyi_post_408c30a8-cb40-4871-9835-f2b2906beb74_캡처"></p>
<p>Notion을 이용해 DB 등 필요한 자료들을 모아놓고 회의한 내용, 각자 개발한 내용까지 모두 노션에 정리하며 진행하고 있다.</p>
<p><img src="https://user-images.githubusercontent.com/63100352/164901874-838fca51-0748-421c-be0c-33512eb1b0f9.png" alt="images_seulhyi_post_f01cea55-17b7-474b-96a8-93c25aa5b3fe_image"></p>
<p>멋쟁이 사자처럼 9기 트렐로에서 총 다섯 팀이 개발 진행을 정리한다.
우리 팀은 notion을 주로 삼고 트렐로에는 총 정리하는 방식으로 이용하고 있다.</p>
<h2 id="마무리" class="heading">마무리</h2>
<p>멋쟁이 사자처럼에서 강의한 내용을 토대로 BOOKREST에서 Frontend는 html, css로 진행한다. Backend은 django로 개발되고 있다.</p>
<p>팀은 네명으로 이루어져있고 나는 Frontend를 맡았다.
방학동안 css, Javascript, React 등 세부적인 것부터 공부해 이번 프로젝트를 통해 구현해 보고 싶어 Frontend로 정했다.</p>
<p>몇 탄까지 갈지 모르겠지만 개발을 진행하면서 내가 배운 것들, 사용한 기능들을 정리해보려 한다.</p>
<p>개발에 대한 이야기는 다음 편에서 👋🏻👋🏻</p>]]>
    </content:encoded>
  </item>
    </channel>
  </rss>